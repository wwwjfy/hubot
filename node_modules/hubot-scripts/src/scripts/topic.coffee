# Topic
#
# set topic to <topic> - Set topic now & when joining current channel
# remove topic - Remove setting topic for current channel

class Topic
  constructor: (@robot) ->
    @topics = @robot.brain.data.topics
    @robot.brain.on 'loaded', =>
      if @robot.brain.data.topics
        @topics = @robot.brain.data.topics

  set: (room, topic) ->
    @topics[room] = topic
    @robot.brain.data.topics = @topics

  remove: (room) ->
    @topics[room] = null
    @robot.brain.data.topics = @topics

  topic_for_room: (room) ->
    return @topics[room]

module.exports = (robot) ->
  topics = new Topic robot
  robot.adapter.bot.addListener 'join', (channel, who) ->

    #this requires hubot to be run with parameter -n the same as irc nick settings
    if who == robot.name
       new_topic = topics.topic_for_room channel
       if new_topic
	 user = {}
         user.room = channel
	 #to be compatible with general api
         array_of_topics = [new_topic]
         robot.adapter.topic user, array_of_topics

  robot.respond /topic (.*)$/i, (msg) ->
    msg.reply "Topic set"
    msg.topic msg.match[1]
    topics.set msg.message.user.room, msg.match[1]

  robot.respond /remove topic/i, (msg)->
    msg.reply "Topic removed"
    msg.topic ''
    topics.remove msg.message.user.room